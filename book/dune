(alias
  (name html)
  (deps aeos.html
        algodiff.html
        architecture.html
        backend.html
        broadcast.html
        cgraph.html
        constant.html
        convention.html
        dataframe.html
        diffequation.html
        introduction.html
        linear-algebra.html
        maths.html
        matrix.html
        ndarray.html
        neural-network.html
        neural-ode.html
        nlp.html
        optimisation.html
        ppl.html
        prologue.html
        signal.html
        slicing.html
        stats.html
        symbolic.html
        testing.html
        visualisation.html
        zoo.html))

(rule
  (targets aeos.html)
  (deps    aeos/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets algodiff.html)
  (deps    algodiff/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets architecture.html)
  (deps    architecture/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets backend.html)
  (deps    backend/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets broadcast.html)
  (deps    broadcast/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets cgraph.html)
  (deps    cgraph/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets constant.html)
  (deps    constant/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets convention.html)
  (deps    convention/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets dataframe.html)
  (deps    dataframe/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets diffequation.html)
  (deps    diffequation/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets introduction.html)
  (deps    introduction/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets linear-algebra.html)
  (deps    linear-algebra/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets maths.html)
  (deps    maths/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets matrix.html)
  (deps    matrix/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets ndarray.html)
  (deps    ndarray/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets neural-network.html)
  (deps    neural-network/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets neural-ode.html)
  (deps    neural-ode/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets nlp.html)
  (deps    nlp/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets optimisation.html)
  (deps    optimisation/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets ppl.html)
  (deps    ppl/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets prologue.html)
  (deps    prologue/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets signal.html)
  (deps    signal/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets slicing.html)
  (deps    slicing/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets stats.html)
  (deps    stats/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets symbolic.html)
  (deps    symbolic/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets testing.html)
  (deps    testing/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets visualisation.html)
  (deps    visualisation/README.md)
  (action  (run mdx output %{deps} -o %{targets})))

(rule
  (targets zoo.html)
  (deps    zoo/README.md)
  (action  (run mdx output %{deps} -o %{targets})))
